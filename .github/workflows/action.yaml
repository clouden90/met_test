name: CI_MET

on:
  push:
    branches: [ "test" ]
  
jobs:
  gen_scorecard:

    runs-on: ubuntu-20.04
    
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
 
    - name: fun_test    
      shell: bash
      run: |
       # set env
       [[ -d `pwd`/MySQL ]] &&  sudo rm -rf MySQL
       [[ -d `pwd`/METviewer ]] &&  sudo rm -rf METviewer
       mkdir METviewer MySQL
       export METVIEWER_DATA=`pwd`/met_out
       export MYSQL_DIR=`pwd`/MySQL
       export METVIEWER_DIR=`pwd`/METviewer
       export METVIEWER_DOCKER_IMAGE=dtcenter/metviewer:main_v5.0 
       #
       [[ -f ./docker-compose.yml ]] && rm ./docker-compose.yml
       cp scripts/docker-compose.yml.tmp ./docker-compose.yml
       #
       sed -i 's@${MYSQL_DIR}@'"$MYSQL_DIR"'@g' ./docker-compose.yml
       sed -i 's@${METVIEWER_DATA}@'"$METVIEWER_DATA"'@g' ./docker-compose.yml
       sed -i 's@${METVIEWER_DIR}@'"$METVIEWER_DIR"'@g' ./docker-compose.yml
       sed -i 's@${METVIEWER_DOCKER_IMAGE}@'"$METVIEWER_DOCKER_IMAGE"'@g' ./docker-compose.yml
       #
       wget https://my-ufs-inputdata.s3.amazonaws.com/met_out.tar.gz
       tar -zxvf met_out.tar.gz
       #
       docker-compose down
       docker-compose up -d
       docker ps -a
       #
       docker exec -i metviewer_1 sh -c 'cp /data/mv_mysql.sql /METviewer/sql; mysql -hmysql_mv -uroot -pmvuser -e"create database mv_met_out;'
       cp /data/mv_mysql.sql /METviewer/sql
       #mysql -hmysql_mv -uroot -pmvuser -e"create database mv_met_out;"
       #mysql -hmysql_mv -uroot -pmvuser mv_met_out < /METviewer/sql/mv_mysql.sql
       #chmod +x /METviewer/bin/mv_load.sh
       #/METviewer/bin/mv_load.sh /data/load_met_out.xml
       #
       #docker exec -i metviewer_1 /bin/bash -c "/METviewer/bin/mv_scorecard.sh /data/score_card.xml"
       ymdh=$(date -u +%Y%m%d%H%M)
       ls -l -h $METVIEWER_DIR
